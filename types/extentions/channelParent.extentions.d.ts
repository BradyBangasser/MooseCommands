import { AnyThreadChannel, CategoryChannel, CategoryChannelChildManager, CategoryChannelResolvable, ChannelType, Collection, DMChannel, GuildChannel, GuildChannelEditOptions, GuildMember, Message, NewsChannel, PartialDMChannel, PartialGroupDMChannel, PermissionOverwriteManager, PermissionsBitField, PrivateThreadChannel, PublicThreadChannel, Role, SetChannelPositionOptions, SetParentOptions, TextChannel, ThreadMember, VoiceBasedChannel, VoiceChannel } from "discord.js";
import { MooseMember, MooseRole, MooseUser } from "..";
import MooseClient from "../client";
import MooseGuild from "./guild.extentions";
declare class MooseChannelParent {
    client: MooseClient;
    type: ChannelType.GuildCategory;
    guild: MooseGuild;
    guildId: string;
    name: string;
    parentId: string | null;
    permissionOverwrites: PermissionOverwriteManager;
    rawPosition: number;
    id: string;
    readonly category: CategoryChannel;
    constructor(category: CategoryChannel, client: MooseClient);
    get children(): CategoryChannelChildManager;
    get createdAt(): Date;
    get createdTimestamp(): number;
    get deletable(): boolean;
    get manageable(): boolean;
    get members(): Collection<string, GuildMember>;
    get parent(): CategoryChannel | null;
    get permissionsLocked(): boolean | null;
    get position(): number;
    get viewable(): boolean;
    delete(reason?: string | undefined): Promise<this>;
    edit(data: GuildChannelEditOptions): Promise<this>;
    equals(channel: GuildChannel | MooseChannelParent): boolean;
    lockPermissions(): Promise<this>;
    permissionsFor(memberOrRole: MooseMember | MooseRole, checkAdmin?: boolean | undefined): Readonly<PermissionsBitField>;
    permissionsFor(memberOrRole: string | MooseMember | MooseUser | Message<boolean> | ThreadMember | Role, checkAdmin?: boolean | undefined): Readonly<PermissionsBitField> | null;
    setName(name: string, reason?: string | undefined): Promise<this>;
    setParent(channel: CategoryChannelResolvable | null, options?: SetParentOptions | undefined): Promise<this>;
    setPosition(position: number, options?: SetChannelPositionOptions | undefined): Promise<this>;
    isTextBased(): this is VoiceChannel | TextChannel | NewsChannel | PublicThreadChannel | PrivateThreadChannel;
    toString(): `<#${string}>`;
    fetch(force?: boolean | undefined): Promise<CategoryChannel>;
    isThread(): this is AnyThreadChannel;
    isDMBased(): this is DMChannel | PartialDMChannel | PartialGroupDMChannel;
    isVoiceBased(): this is VoiceBasedChannel;
    toJSON(...props: Record<string, string | boolean>[]): unknown;
    valueOf(): string;
}
export default MooseChannelParent;
